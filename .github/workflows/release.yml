name: Arithma Release

on:
  push:
    tags:
      - 'v*' # Run when a version tag is pushed (v1.0.0, v0.1.2, etc.)

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for changelog generation
          
      - name: Set up tag name
        id: tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Generate changelog
        id: changelog
        run: |
          # Simple changelog generation - improve this in a real workflow
          echo "## Changes in ${TAG_NAME}" > CHANGELOG.md
          git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          cat CHANGELOG.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Install wasm-pack
        run: cargo install wasm-pack
          
      - name: Build in release mode
        run: cargo build --release --verbose
        
      - name: Build WebAssembly
        run: wasm-pack build --target web --release
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
          
      - name: Install frontend dependencies
        run: cd frontend && npm ci
        
      - name: Copy WASM build to frontend
        run: |
          mkdir -p frontend/public/pkg 
          cp -r pkg/* frontend/public/pkg/
          mkdir -p frontend/node_modules/arithma
          cp -r pkg/* frontend/node_modules/arithma/
        
      - name: Build frontend
        run: cd frontend && npm run build:ci
        
      - name: Create release archive
        run: |
          mkdir -p dist
          cp target/release/arithma dist/
          cp -r frontend/dist dist/frontend
          cp -r pkg dist/
          tar -czvf arithma-${{ env.TAG_NAME }}.tar.gz dist
          zip -r arithma-${{ env.TAG_NAME }}.zip dist
        
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
          
      - name: Upload Release Tarball
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arithma-${{ env.TAG_NAME }}.tar.gz
          asset_name: arithma-${{ env.TAG_NAME }}.tar.gz
          asset_content_type: application/gzip
          
      - name: Upload Release Zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arithma-${{ env.TAG_NAME }}.zip
          asset_name: arithma-${{ env.TAG_NAME }}.zip
          asset_content_type: application/zip