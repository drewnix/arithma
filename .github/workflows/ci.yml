name: Arithma CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  rust-backend:
    name: Rust Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
          
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Install wasm-pack
        run: cargo install wasm-pack
          
      - name: Check formatting
        run: cargo fmt -- --check
        
      - name: Lint with clippy
        run: cargo clippy -- -D warnings
        
      - name: Build
        run: cargo build --verbose
        
      - name: Run tests
        run: cargo test --verbose
        
      - name: Build WebAssembly
        run: wasm-pack build --target web

  typescript-frontend:
    name: TypeScript Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint
        run: npm run lint
        
      - name: Type check
        run: npm run typecheck
        
      - name: Build
        run: npm run build

  # This job ensures all tests pass in a fully integrated environment
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [rust-backend, typescript-frontend]
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Install wasm-pack
        run: cargo install wasm-pack
          
      - name: Build WebAssembly
        run: wasm-pack build --target web
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
          
      - name: Install frontend dependencies
        run: cd frontend && npm ci
        
      - name: Copy WASM build to frontend
        run: mkdir -p frontend/public/pkg && cp -r pkg/* frontend/public/pkg/
        
      - name: Build frontend
        run: cd frontend && npm run build
        
      # Add more integration tests here as needed